package tea.lib {
	public class TRandom {
		static public var seed:Number = 0;
		static private var  randomList:Array = [];
		
		randomList[0]=0.7575209126807749;
		randomList[1]=0.02396870357915759;
		randomList[2]=0.08963617216795683;
		randomList[3]=0.16957203717902303;
		randomList[4]=0.9886001362465322;
		randomList[5]=0.4328441796824336;
		randomList[6]=0.1403748788870871;
		randomList[7]=0.5701318643987179;
		randomList[8]=0.16662552999332547;
		randomList[9]=0.25303359515964985;
		randomList[10]=0.8092642840929329;
		randomList[11]=0.4589475290849805;
		randomList[12]=0.6795260538347065;
		randomList[13]=0.31984193390235305;
		randomList[14]=0.7240679087117314;
		randomList[15]=0.241773487534374;
		randomList[16]=0.03687568614259362;
		randomList[17]=0.6440971866250038;
		randomList[18]=0.420611091889441;
		randomList[19]=0.4759336756542325;
		randomList[20]=0.3675510189495981;
		randomList[21]=0.3092451458796859;
		randomList[22]=0.8938105176202953;
		randomList[23]=0.9980722395703197;
		randomList[24]=0.1441330718807876;
		randomList[25]=0.0031389882788062096;
		randomList[26]=0.11797429947182536;
		randomList[27]=0.6169783449731767;
		randomList[28]=0.2420975500717759;
		randomList[29]=0.4198696818202734;
		randomList[30]=0.8522848314605653;
		randomList[31]=0.5965058179572225;
		randomList[32]=0.30962555669248104;
		randomList[33]=0.3171654986217618;
		randomList[34]=0.988743697758764;
		randomList[35]=0.5493224868550897;
		randomList[36]=0.9042111868038774;
		randomList[37]=0.7340380270034075;
		randomList[38]=0.22165362490341067;
		randomList[39]=0.6286691012792289;
		randomList[40]=0.10090314410626888;
		randomList[41]=0.49741559382528067;
		randomList[42]=0.3961541703902185;
		randomList[43]=0.49146223487332463;
		randomList[44]=0.9052235358394682;
		randomList[45]=0.27777427341789007;
		randomList[46]=0.8051703907549381;
		randomList[47]=0.5441842218860984;
		randomList[48]=0.15814209775999188;
		randomList[49]=0.48780144983902574;
		randomList[50]=0.2506780535914004;
		randomList[51]=0.6093535088002682;
		randomList[52]=0.20776007557287812;
		randomList[53]=0.9341962966136634;
		randomList[54]=0.6934777307324111;
		randomList[55]=0.917797589674592;
		randomList[56]=0.4724398525431752;
		randomList[57]=0.8020435022190213;
		randomList[58]=0.3441030797548592;
		randomList[59]=0.17977539356797934;
		randomList[60]=0.983619328122586;
		randomList[61]=0.6001828578300774;
		randomList[62]=0.8422896666452289;
		randomList[63]=0.592164842877537;
		randomList[64]=0.17097529489547014;
		randomList[65]=0.37274784315377474;
		randomList[66]=0.3006097278557718;
		randomList[67]=0.48088383208960295;
		randomList[68]=0.7550612632185221;
		randomList[69]=0.1326381340622902;
		randomList[70]=0.12916305847465992;
		randomList[71]=0.2643207972869277;
		randomList[72]=0.7018759879283607;
		randomList[73]=0.8059790977276862;
		randomList[74]=0.7096624015830457;
		randomList[75]=0.684602901339531;
		randomList[76]=0.3638390302658081;
		randomList[77]=0.2981758904643357;
		randomList[78]=0.9998221304267645;
		randomList[79]=0.6838821941055357;
		randomList[80]=0.12417985359206796;
		randomList[81]=0.7385011329315603;
		randomList[82]=0.5305750886909664;
		randomList[83]=0.8711728141643107;
		randomList[84]=0.2994185518473387;
		randomList[85]=0.6198879922740161;
		randomList[86]=0.666605475358665;
		randomList[87]=0.35802464466542006;
		randomList[88]=0.5950096040032804;
		randomList[89]=0.8979531447403133;
		randomList[90]=0.47201164020225406;
		randomList[91]=0.6876704604364932;
		randomList[92]=0.13657137984409928;
		randomList[93]=0.5855494900606573;
		randomList[94]=0.5084514846093953;
		randomList[95]=0.8190022595226765;
		randomList[96]=0.21593047166243196;
		randomList[97]=0.07820333912968636;
		randomList[98]=0.9909624825231731;
		randomList[99]=0.791666011326015;
		randomList[100]=0.5582945244386792;
		randomList[101]=0.877383085899055;
		randomList[102]=0.9575557825155556;
		randomList[103]=0.23382234480232;
		randomList[104]=0.005837354809045792;
		randomList[105]=0.10915142623707652;
		randomList[106]=0.5888364920392632;
		randomList[107]=0.13421174976974726;
		randomList[108]=0.46192802768200636;
		randomList[109]=0.5211059469729662;
		randomList[110]=0.0016231448389589787;
		randomList[111]=0.5920292139053345;
		randomList[112]=0.888548512943089;
		randomList[113]=0.001287038903683424;
		randomList[114]=0.4902473110705614;
		randomList[115]=0.1601745653897524;
		randomList[116]=0.6898294338025153;
		randomList[117]=0.6670260117389262;
		randomList[118]=0.1386687196791172;
		randomList[119]=0.9948279657401145;
		randomList[120]=0.46696574054658413;
		randomList[121]=0.4825999001041055;
		randomList[122]=0.7175213657319546;
		randomList[123]=0.7225490142591298;
		randomList[124]=0.28314912458881736;
		randomList[125]=0.05253100814297795;
		randomList[126]=0.3551013064570725;
		randomList[127]=0.21290712105110288;
		randomList[128]=0.31346993427723646;
		randomList[129]=0.8311304808594286;
		randomList[130]=0.5021704654209316;
		randomList[131]=0.9165419088676572;
		randomList[132]=0.25994264148175716;
		randomList[133]=0.32773910323157907;
		randomList[134]=0.5451889489777386;
		randomList[135]=0.006230954080820084;
		randomList[136]=0.7645239601843059;
		randomList[137]=0.7250870377756655;
		randomList[138]=0.41014250414445996;
		randomList[139]=0.08969245664775372;
		randomList[140]=0.7523436406627297;
		randomList[141]=0.4224750199355185;
		randomList[142]=0.4236886133439839;
		randomList[143]=0.4703958034515381;
		randomList[144]=0.2290022331289947;
		randomList[145]=0.1301092761568725;
		randomList[146]=0.37003466207534075;
		randomList[147]=0.11435061041265726;
		randomList[148]=0.6828019693493843;
		randomList[149]=0.5364101338200271;
		randomList[150]=0.1774954441934824;
		randomList[151]=0.3197449967265129;
		randomList[152]=0.5658436007797718;
		randomList[153]=0.27703320141881704;
		randomList[154]=0.2413097252137959;
		randomList[155]=0.3166175093501806;
		randomList[156]=0.6686539105139673;
		randomList[157]=0.5326436990872025;
		randomList[158]=0.031311335507780313;
		randomList[159]=0.9707914409227669;
		randomList[160]=0.9795366167090833;
		randomList[161]=0.774177782703191;
		randomList[162]=0.7316051828674972;
		randomList[163]=0.08937346190214157;
		randomList[164]=0.6730889626778662;
		randomList[165]=0.03273659572005272;
		randomList[166]=0.5430913791060448;
		randomList[167]=0.6799274804070592;
		randomList[168]=0.5417049685493112;
		randomList[169]=0.826910010073334;
		randomList[170]=0.10599581245332956;
		randomList[171]=0.6078082378953695;
		randomList[172]=0.9653995735570788;
		randomList[173]=0.17337400000542402;
		randomList[174]=0.010110949631780386;
		randomList[175]=0.6723702065646648;
		randomList[176]=0.5027136127464473;
		randomList[177]=0.5511146550998092;
		randomList[178]=0.9507707739248872;
		randomList[179]=0.0791922640055418;
		randomList[180]=0.5501495357602835;
		randomList[181]=0.3130295076407492;
		randomList[182]=0.7243848112411797;
		randomList[183]=0.34508036309853196;
		randomList[184]=0.075581144541502;
		randomList[185]=0.6041127252392471;
		randomList[186]=0.4196378383785486;
		randomList[187]=0.5497771599330008;
		randomList[188]=0.3011789876036346;
		randomList[189]=0.5341903464868665;
		randomList[190]=0.07048009056597948;
		randomList[191]=0.2866782695055008;
		randomList[192]=0.9489587624557316;
		randomList[193]=0.5748730143532157;
		randomList[194]=0.1451524910517037;
		randomList[195]=0.4637087560258806;
		randomList[196]=0.8015706003643572;
		randomList[197]=0.16184503538534045;
		randomList[198]=0.9517326159402728;
		randomList[199]=0.5607838383875787;
		randomList[200]=0.9877054276876152;
		randomList[201]=0.7644137847237289;
		randomList[202]=0.5550411902368069;
		randomList[203]=0.8809530492872;
		randomList[204]=0.9046761500649154;
		randomList[205]=0.5114587908610702;
		randomList[206]=0.6571209100075066;
		randomList[207]=0.9834216176532209;
		randomList[208]=0.7367365411482751;
		randomList[209]=0.5847159610129893;
		randomList[210]=0.006288270466029644;
		randomList[211]=0.9184571923688054;
		randomList[212]=0.43130994960665703;
		randomList[213]=0.6109983450733125;
		randomList[214]=0.4259997815825045;
		randomList[215]=0.8720809235237539;
		randomList[216]=0.6185639360919595;
		randomList[217]=0.3596351225860417;
		randomList[218]=0.27621804364025593;
		randomList[219]=0.4389035701751709;
		randomList[220]=0.36268343264237046;
		randomList[221]=0.10231356462463737;
		randomList[222]=0.21006798231974244;
		randomList[223]=0.033943090587854385;
		randomList[224]=0.9458512691780925;
		randomList[225]=0.826314392965287;
		randomList[226]=0.9382451330311596;
		randomList[227]=0.011659280862659216;
		randomList[228]=0.6885812417604029;
		randomList[229]=0.3905018982477486;
		randomList[230]=0.5952512240037322;
		randomList[231]=0.13937016623094678;
		randomList[232]=0.7299530357122421;
		randomList[233]=0.16184441465884447;
		randomList[234]=0.4812983092851937;
		randomList[235]=0.8034276957623661;
		randomList[236]=0.10371148167178035;
		randomList[237]=0.5722698303870857;
		randomList[238]=0.5188376801088452;
		randomList[239]=0.8901675813831389;
		randomList[240]=0.9352821498177946;
		randomList[241]=0.017573132179677486;
		randomList[242]=0.43018760019913316;
		randomList[243]=0.13835691194981337;
		randomList[244]=0.24556255107745528;
		randomList[245]=0.9018343319185078;
		randomList[246]=0.8614247958175838;
		randomList[247]=0.5080994432792068;
		randomList[248]=0.0715611819177866;
		randomList[249]=0.26042321557179093;
		randomList[250]=0.0770742786116898;
		randomList[251]=0.7670857296325266;
		randomList[252]=0.45702815940603614;
		randomList[253]=0.14447497436776757;
		randomList[254]=0.038460295647382736;
		randomList[255]=0.9074745988473296;

		public function TRandom() :void	{}
		static function easy(min:int, max:int = -0xffff):int {
			if (max <min) {
				return Math.floor(next() * min);
			}else {
				return Math.floor(next() * (max - min)) + min;
			}
		}
		static public function get next():Number {
			seed = seed == randomList.length?0:seed++;
			return randomList[seed];
		}
	}
}